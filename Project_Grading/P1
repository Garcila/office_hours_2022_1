# aCHORDingly

# Cinco Swim Solutions

## General comments

The application is unique and fitting to the group. You found a way to leverage your strengths to provide an experience that no other group could. The technical challenges that the group solved are impressive and all of you should be very proud of what you created in this short two weeks.

Great work!

## Keep doing ->

- The readme file is clear and informative to all the Bootcamp participants
- 218 commits and 6 braches
- Favicon
- Your HTML is well commented and structured
- Yur app.css is well structured to complement Foundation
- The About, How it Works and Contact modals are very informative and clear
- The folder structure is clear and easy to navigate
- Very impressed to see the incorporation of oAuth
- The JS code is well structured and generously commented
- Incorporation of Regular Expressions
- Asynchronous calls in the application to populate different chords. Impressive work

## Things to improve ->

- The readme file should serve the general population in GitHub, not just the Bootcamp
- There is some unused code in your HTMLlines (118-122/ 162-163). It should not be part of the deployed application
- The sc.png file should be in the assets folder
- You have foundation and foundation minified in your css. In your HTML you are linking to foundation.css
- The idea of having to log in to a different service is off putting for most users, but understandable in a learning context
- The modals could be a bit smaller as they feel overpowering in the application
- The information about having an accout with HookTheory should be in the Login modal to avoid confusion
- There is a copy of fundation.js and a copy of fundation.min.js, only one of the should be needed for the application to work. You are linking from your HTML file the foundation.min.js
- Good use of Object.keys(keys) to loop over the keys in the object. Other way to loop over an object is [mdn for in](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in)

  ```js
  for (var key in keys) {
  	console.log(key);
  }
  ```

- It works, but using a Switch statement with only one case feels a bit strange. An If statement will do.
- One option to make your code a little easier to manage, would be to break it in separate files

# No Fraud

# Robots

## General comments

There are many things to like in your application. The idea is poignant and well executed as well as your presentation. It is impressive to see how well you incorporated in one page so much information without making it seem overwhelming or crowded, while mantaining a good user experience.

Great work!

## Keep doing ->

- Great idea
- Ease of use
- Form validation
- adding your api key to your .gitignore file
- Your HTML is well strutured, commented and uses semantic tags
- The use of CSS Custom properties (variables) to store your two colours. This technique will make changing colours in the application very easy if needed. It is also a good stepping stone to provide Dark Mode
- The CSS flows with the page and there are comments separating different sections
- Media queries to style the page at different screen sizes
- Accessing a second API in case the first one fails to get the required data
- Use of catch on your fetch calls to handle errors and provide information to the user
- Your code is very organized, well commented and easy to follow
- You broke your functionality in many different functions making the code easier to manage
- 45 commits in your repo and several branches including a develop branch

## Things to improve ->

- You should not need to include both foundation.css and foundation.min.css. One of them should be enough. Ideally the .min.css since it is minified and therefore will load faster
- I would like the validation in the form to be better styled. The red text is effective, but does not fit well the rest of the application
- Your JS file is quite long, maybe it can be broken down in smaller and more manageable chunks
-
